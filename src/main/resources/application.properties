server.port=8081

#spring.datasource.url=jdbc:mysql://localhost:3306/mybatis_demo?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=true
#spring.datasource.username=root
#spring.datasource.password=passward
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.initialization-mode=always

#================== mybatis =====================#
# 映射文件路径
mybatis.mapper-locations=classpath:mybatis/mapper/*Dao.xml
# 指定mybatis生成包
mybatis.type-aliases-package=com.example.demo.dao.*
# 指定mybatis配置文件路径
mybatis.config-location=classpath:mybatis/mybatis-config.xml

spring.shardingsphere.datasource.names=ds
# 配置第一个数据库
spring.shardingsphere.datasource.ds.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds.jdbc-url=jdbc:mysql://localhost:3306/mybatis_demo?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=true
spring.shardingsphere.datasource.ds.username=root
spring.shardingsphere.datasource.ds.password=passward

# 配置分库策略
# spring.shardingsphere.sharding.tables.users.database-strategy.standard.sharding-column=id
# 自定义分库策略
# spring.shardingsphere.sharding.tables.users.database-strategy.standard.precise-algorithm-class-name=com.example.test.config.MyDbPreciseShardingAlgorithm

# 配置users的分表策略
spring.shardingsphere.sharding.tables.users.actual-data-nodes=ds.users_$->{0..1}
spring.shardingsphere.sharding.tables.users.table-strategy.standard.sharding-column=id
# 自定义分表策略
spring.shardingsphere.sharding.tables.users.table-strategy.standard.precise-algorithm-class-name=com.example.demo.config.MyTablePreciseShardingAlgorithm

# 添加users表的id生成策略
spring.shardingsphere.sharding.tables.users.key-generator.column=id
spring.shardingsphere.sharding.tables.users.key-generator.type=SNOWFLAKE

# 打开sql输出日志
spring.shardingsphere.props.sql.show=true